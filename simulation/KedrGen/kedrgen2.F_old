      SUBROUTINE KEDRGEN2(VERTEX,IPRTRK)
c********************************************************************
c
c   Primary tracks kinematics: generators 301-400, V.A.Tayursky
c
c   Input: VERTEX - vertex of event
c          IPRTRK = 1/0 - print/no print initial tracks 
c          KGEN - number of generator of process: from /KEDR_GEN/ 
c
c   Changes:
c
c   18.02.2003. Corrections: + prints of primary tracks (generator 310)
c                        + psi'->psi pi+pi- (psi->l+l-) (generator 311) 
c                        + test prints generator        (generator 312) 
c   20.03.2003. Corrections: for generator 307: goto 333 -> return
c   25.04.2003. added generator  313 ee->tau tau (gamma) (KORALB)
c   10.06.2003. added generator  314 ee->2 PS PS 
c   18.11.2003. added generators 315 ee->psi'-> ... and
c                                316 ee->gamma + X
c   04.03.2004. added generator  317 of Vermaseren ee->ee+ee(mumu)
c   15.03.2004. changed generat. 314 ee->A+Bz+Cz^2, z=cos(theta)
c   21.03.2004. in /PSEVT/ added SPINPS(3,100) 
c   01.03.2005. gen 314 moved to PST, gen 316 corrected 
c   01.04.2005. gen 311 add pi+pi- mode without J/psi: 311 0
c   02.09.2005. added generator 319 ee->ee+ pi+pi-
c   01.02.2006. added generator 320 (KMD-generator)
c   02.02.2006. corrected parameters for call gen. 318
c   16.04.2007. added generator 321 e+e- -> e+e- gamma
c   08.05.2007. for gen 321 added print out of L*t   
c
c********************************************************************
      IMPLICIT NONE
      COMMON /GCONST/ PI,TWOPI ,PIBY2,DEGRAD,RADDEG,CLIGHT ,BIG,EMASS
      common /PKIN/    NTRACK,IPARTICLE(50),EPART(50), ! - for output file
     +                 PXPART(50),PYPART(50),PZPART(50)
      COMMON /GCFLAG/  IDEBUG,IDEMIN,IDEMAX,ITEST,IDRUN,IDEVT,IEORUN,
     +                 IEOTRI,IEVENT,ISWIT(10),IFINIT(20),NEVENT,
     $                 NRNDM(2)
c
      COMMON /KEDR_GEN/KHEP,KGEN,GENPAR(20) ! input parameters for generators
      COMMON /PSEVT/   NPS,KPS(4,100),PPS(4,100),SPINPS(3,100) ! package PST
      COMMON /PSCONS/  PIPS,NGNT,AMASS(600)
      COMMON /PSPIND/  NPIND,INDP(600)
      COMMON /PSEEHPS/ NEST,PHSI,ERPHSI,SN,WM,NGTEE,IDEE(20)
      COMMON /PSGGSEC/ NOBR,TSEC,ERSEC,FM,ID(20),NGT,IDUM(2)
      COMMON /GGHPRT/  NPART,P41(4,20),IPART(20)               ! gen. 306,307
      COMMON /VECO /   IVEDUM(2),INPMAJ,IVEDUM1(1635),FMAXI    ! gen. 317         
      COMMON /LUJETS/  N,KK(4000,5),P(4000,5),V(4000,5)             !: 315
      COMMON /LUDAT2/  KCHG(500,3),PMAS(500,4),PARF(2000),VCKM(4,4) !: 315
      COMMON /LUDAT3/  MDCY(500,3),MDME(2000,2),BRAT(2000),KFDP(2000,5) !: 315
      COMMON /GG_EESAP/SAP(4),SAPT,CROSEC ! 307 
      INTEGER NMXHEP
      PARAMETER (NMXHEP=2000)
      COMMON /HEPEVT/             ! for PHOTOS
     $      nevhep,               ! serial number
     $      nhep,                 ! number of particles
     $      isthep(nmxhep),       ! status code
     $      idhep(nmxhep),        ! particle ident KF   
     $      jmohep(2,nmxhep),     ! parent particles
     $      jdahep(2,nmxhep),     ! childreen particles
     $      phep(5,nmxhep),       ! four-momentum, mass [GeV]
     $      vhep(4,nmxhep)        ! vertex [mm]
      REAL*8  phep,  vhep         ! to be real*4 / *8  depending on host
      INTEGER nevhep,nhep,isthep,idhep,jmohep, jdahep

      INTEGER *4 KHEP,KGEN,NPS,KPS,NGNT,NPIND,INDP,NEST,NGTEE,IDEE
      INTEGER *4 NOBR,ID,NGT,IDUM,NPART,IPART,N,KK,KCHG,MDCY,MDME,KFDP
      INTEGER *4 IDEBUG,IDEMIN,IDEMAX,ITEST,IDRUN,IDEVT,IEORUN,NRNDM
      INTEGER *4 IVEDUM,IVEDUM1,INPMAJ,ITER,NPRT
      INTEGER *4 NTRACK,IPARTICLE,IEOTRI,IEVENT,ISWIT,IFINIT,NEVENT
c
      REAL *4 GENPAR,PPS,AMASS,PHSI,ERPHSI,SN,WM,TSEC,ERSEC,FM,P41
      REAL *4 P,V,PMAS,PARF,VCKM,BRAT,EPART,PXPART,PYPART,PZPART
      REAL *4 PI,TWOPI ,PIBY2,DEGRAD,RADDEG,CLIGHT ,BIG,EMASS
      REAL *4 VERTEX(3),PLAB(3),ARREVT(7,100),EVENT(6,100)
      REAL *4 AMC,AMN,ECM,EN1,WEID(4)
      REAL *4 PTLIFE,PCHARGE,PAMASS,PP,UB,TLIFE,CHARGE,CTAU,SPIN
      REAL *4 CHRG,APMASS,WIDTH,DUMM,RE_INT,PMASS,VEPART(4,4)
      REAL *4 TI1,TS1,AVGI,SD,CHI2A,SPINPS
      REAL *8 PIPS,FMAXI,ALT,SAP,SAPT,CROSEC,ACC,ANGMIN,EBEAM,FMAX,WMAX
      REAL *8 QQ(4,10),OMEMIN,HSIGB,VSIGB,HBET,VBET,ELEFIN(4),PHOFIN(4)
      REAL *8 SECBREM,ERRBREM
      INTEGER *4 I,KODHEP,IDC,IMODE,I1_CHAN,NB_CHAN,KC_PSI1,KGEN0,ks
      INTEGER *4 NSTABL,ITRTYPE,J,NWB,ITRTYP,ICALLS,MDEC,LUCOMP,NEVREAD
      INTEGER *4 MDUM,ITYP,ITHEP,ICALLS1,ICALLS2,KODTAG1,IREGGGH,KVDM
      INTEGER *4 KODTAG,IPRTRK,NT,ITYPE,KGE,KHE,IGE,NVERT,INT_RE
      INTEGER *4 KPART(100),ITPS(20),IGENPAR(20),IPROC,ISORT(10)
      CHARACTER *20 NAMPART,CHNPAR
      CHARACTER *12 ANAME	
      CHARACTER *15 TEXT320(3)
      CHARACTER *14 T315(12)
      EQUIVALENCE (RE_INT,INT_RE)
c
      DATA TEXT320/'e+e-(n gam)    ','mu+mu-(n gam)  ',
     &             'tau+tau-(n gam)'/
c
      DATA T315/'all','e+ e-','mu+ mu-','rndmflav','J/psi pi+ pi-',
     &         'J/psi pi0 pi0','J/psi eta0','J/psi pi0','chi_c0 gamma',
     &          'chi_c1 gamma','chi_c2 gamma','eta_c gamma'/
c
      DO I=1,20
        IGENPAR(I)=IFIX(GENPAR(I))   ! real -> integer 
      END DO
c
c-------------------------------------------------------------------
c
c    Determination of process for simulation from IKINE=KGEN (GENE card)
c    ===================================================================
c
c**  KGEN=301-310: V.A.Tayursky
c
      IF(KGEN.EQ.301) GOTO 301 ! e+e- -> hadrons (stat.model)
      IF(KGEN.EQ.302) GOTO 302 ! e+e- -> e+e- + hadrons (stat.model)
      IF(KGEN.EQ.303) GOTO 303 ! e+e- -> e+e- + pi0
      IF(KGEN.EQ.304) GOTO 304 ! e+e- -> e+e- + eta
      IF(KGEN.EQ.305) GOTO 305 ! e+e- -> e+e- + eta'
      IF(KGEN.EQ.306) GOTO 306 ! e+e- -> e+e- + mu(tau)+mu(tau)- (gamma) 
      IF(KGEN.EQ.307) GOTO 307 ! e+e- -> e+e- + e+e-
      IF(KGEN.EQ.308) GOTO 308 ! e+e- -> J/psi(psi') ->VP
      IF(KGEN.EQ.309) GOTO 309 ! e+e- -> e+e- + X, X - any GEANT particle. 
      IF(KGEN.EQ.310) GOTO 310 ! gukine_t reads event from file
      IF(KGEN.EQ.311) GOTO 311 ! e+e- -> psi' -> J/psi(->l+l-) +pi+pi-
      IF(KGEN.EQ.312) GOTO 312 ! 1 particle with test print (from gustep)
      IF(KGEN.EQ.313) GOTO 313 ! e+e- -> tau+ tau- (gamma) (KORALB)
      IF(KGEN.EQ.314) GOTO 314 ! e+e- -> A+Bz+Cz^2
      IF(KGEN.EQ.315) GOTO 315 ! e+e- -> psi' (jetset)
      IF(KGEN.EQ.316) GOTO 316 ! e+e- -> gamma + X (gamma d.f. ~ 1+cos^2 teta)
      IF(KGEN.EQ.317) GOTO 317 ! e+e- -> e+e- + e+e-(mu+mu-) (J.A.M.Vermas.)
      IF(KGEN.EQ.318) GOTO 318 ! e+e- -> e+e- + tau+tau- (J.A.M.Vermaseren)
      IF(KGEN.EQ.319) GOTO 319 ! e+e- -> e+e- + pi+pi- 
      IF(KGEN.EQ.320) GOTO 320 ! KMD-generator
      IF(KGEN.EQ.321) GOTO 321 ! e+e- -> e+ e- gamma (Bremsstrahlung)
c
      PRINT *,' Wrong generator number! See the KEDR WWW page '
      stop
c
c------------------------------------------------------------------
c
 301  continue
c
c  e+e- -> hadrons (stat.model)
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      DO I=1,20
        ITPS(I)=0
      END DO
c
      IF(IGENPAR(2).LT.1.OR.IGENPAR(2).GT.2) THEN 
        print *,' GUKINE_T, error: regime for generator # 301',
     +      	' should be 1 or 2'                  	  
        STOP                                         	  
      END IF
c
      AMC=GENPAR(3) ! paramaters for multiplicity generation
      AMN=GENPAR(4)
c
      IF (IGENPAR(2).EQ.1) GOTO 3    ! generator regime 
c
      DO I=1,17                      ! fixed mult.events, <=16 particles
        IGE=IGENPAR(I+3)             ! Geant-code of final paticle
        IF(IGE.GE.1) ITPS(I)=IGE
      END DO
c
 3    CONTINUE
c                    Ebeam    Ireg      AMC AMN  NT     Maj
      CALL PST_EEH(GENPAR(1),IGENPAR(2),AMC,AMN,ITPS,GENPAR(3)) ! N_pi
c                    
      DO 2 I=1,NPS
c
        KHE=KPS(1,i)              ! HEP-code of particle
c
        CALL PST_PCODE1(KHE,KGE)  ! HEP-code -> GEANT-code
c
        PLAB(1)=PPS(1,I)
        PLAB(2)=PPS(2,I)
        PLAB(3)=PPS(3,I)
        ITYPE=KGE
c
        CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
        NTRACK=I
        IPARTICLE(I)=ITYPE
        EPART(I)=PPS(4,I)
        PXPART(I)=PLAB(1)
        PYPART(I)=PLAB(2)
        PZPART(I)=PLAB(3)
c
 	IF(IPRTRK.EQ.1) THEN
          PRINT 397,IEVENT,I,ITYPE,PLAB,VERTEX
 	END IF
c
 2    CONTINUE
c
      IF(IEVENT.EQ.NEVENT) PRINT 401,WM,NGTEE
      RETURN
c
c----------------------------------------------------------------------
c
 302  CONTINUE
c
c  e+e- -> e+e- + hadrons (stat.model)
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      DO I=1,20
        ITPS(I)=0
      END DO
c
      IF(IGENPAR(2).LT.1.OR.IGENPAR(2).GT.2) THEN 
        PRINT *,' GUKINE_T, ERROR: regime for generator # 302',
     +          ' should be 1 or 2'
        STOP
      END IF  
c
      KODTAG=IGENPAR(3)
      IF(KODTAG.LT.0.OR.KODTAG.GT.2) THEN
        PRINT *,' GUKINE_T, error: Itag for generator 302',
     +	        ' should be 0, 1 or 2'   
        STOP
      END IF
c
      KVDM=IGENPAR(7)
c
      IF(IGENPAR(2).EQ.2) GOTO 6    ! 1-st or 2-nd regime
c
      IREGGGH=1     ! for variable event composition
      AMC=GENPAR(11)
      AMN=GENPAR(12)
      GOTO 396
c
c  Fixeed event composition (1 - 14 particles)
c
 6    IREGGGH=2
      AMC=0.
      AMN=0.
c
      DO I=1,10                      ! fixed mult.events, <=10 particles
        IGE=IGENPAR(I+10)            ! Geant-code of final paticle
        IF(IGE.GE.1) ITPS(I)=IGE
      END DO
c
c                    Eb         Wmin   Wmax      IREG     AMC
 396  CALL PST_GGH(GENPAR(1),GENPAR(4),GENPAR(5),IREGGGH, AMC,
     + AMN,ITPS, GENPAR(6), KVDM, GENPAR(8),GENPAR(9),GENPAR(10))
c       AMN        SEC      KVDM       t1        t2        maj
c
      IF(KODTAG.GT.0) THEN    ! are there hits into tagging system?
c
        CALL TS_TAG(302,GENPAR(1),KODTAG1,ICALLS,ICALLS1,ICALLS2)
c
        IF(KODTAG1.LT.KODTAG) GOTO 396
      END IF
c
      DO 32 I=1,NPS   
c
        KHE=KPS(1,I)              ! HEP-code of particle
c
        CALL PST_PCODE1(KHE,KGE)  ! HEP-code -> GEANT-code
c
        PLAB(1)=PPS(1,I)
        PLAB(2)=PPS(2,I)
        PLAB(3)=PPS(3,I)
        ITYPE=KGE
c
        CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
        NTRACK=I
        IPARTICLE(I)=ITYPE
        EPART(I)=PPS(4,I) 
        PXPART(I)=PLAB(1) 
        PYPART(I)=PLAB(2)
        PZPART(I)=PLAB(3)
c
 	IF(IPRTRK.EQ.1) PRINT 397,IEVENT,I,ITYPE,PLAB,VERTEX
c
 32   CONTINUE
c
      IF(IEVENT.EQ.NEVENT) PRINT 3022,(1.*ICALLS1)/ICALLS,
     *  (1.*ICALLS2)/ICALLS
      IF(IEVENT.EQ.NEVENT) THEN 
        ALT=NEVENT/TSEC
        PRINT 400,TSEC,ERSEC,ALT,FM,NGT
      END IF
c
      RETURN
c
c---------------------------------------------------------------------
c
 303  CONTINUE
c
c  e+e- -> e+e- + pi0 (with pi0 decays)
c
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      MDEC=igenpar(3)
      KODtag=igenpar(2)
      KVDM=genpar(4)+0.5
c
c   MDEC=1: pi0 -> 2gamma,
c   MDEC=2: pi0 -> e+e-gamma
c
 3031 CALL PST_GGRPS(genpar(1),1,MDEC,dumm,8.0E-3,KVDM,genpar(5),
     &               genpar(6),genpar(7))
c
      if(KODtag.gt.0) then
c
        CALL TS_TAG(303,genpar(1),KODtag1,ICALLS,ICALLS1,ICALLS2)
c
        IF(KODtag1.lt.KODtag) GOTO 3031
      end if
c
      if(IEVENT.NE.NEVENT) goto 333
c
c  Print at end of simulation
c
        ALT=NEVENT/TSEC
        PRINT 400,TSEC,ERSEC,ALT,FM,NGT 
c
      goto 333
c
c------------------------------------------------------------------
 304  CONTINUE
c
c  e+e- -> e+e- + eta (with eta decays)
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      MDEC=igenpar(3)
      KODtag=igenpar(2)
      KVDM=genpar(4)+0.5
c
c                  1: eta -> 2gamma      (PDG: 39.2%)
c                  2: eta -> 3pi0        (PDG: 32.2%)
c                  3: eta -> pi+pi-pi0   (PDG: 21.3%)
c                  4: eta -> pi+pi-gamma (PDG: 4.8%)
c
 3041 CALL PST_GGRPS(genpar(1),2,MDEC,dumm,0.46,KVDM,genpar(5),
     +               genpar(6),genpar(7))
c
      if(KODtag.gt.0) then
c
        CALL TS_TAG(304,genpar(1),KODtag1,ICALLS,ICALLS1,ICALLS2)
c
        IF(KODtag1.lt.KODtag) GOTO 3041
      end if
c
      if(IEVENT.NE.NEVENT) goto 333
c
c  Print at end of simulation
c
        ALT=NEVENT/TSEC
        PRINT 400,TSEC,ERSEC,ALT,FM,NGT 
c
      goto 333
c
c----------------------------------------------------------------------
 305  CONTINUE
c
c  e+e- -> e+e- + eta' (with eta' decays)
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      KODtag=igenpar(2)
      MDEC  =igenpar(3)
      KVDM=genpar(4)+0.5
c
c    MDEC=1:     ' eta-prime -> 2gamma'
c         2:     ' eta-prime -> pi+ pi- eta (eta->2gamma)'            
c         3:     ' eta-prime -> pi+ pi- eta (eta ->3pi0)'             
c         4:     ' eta-prime -> pi+ pi- eta (eta ->pi+ pi- pi0)'      
c         5:     ' eta-prime -> pi+ pi- eta (eta ->pi+ pi- gamma)'    
c         6:     ' eta-prime -> pi0 pi0 eta (eta ->2gamma)'           
c         7:     ' eta-prime -> pi0 pi0 eta (eta ->3pi0)'             
c         8:     ' eta-prime -> pi0 pi0 eta (eta ->pi+ pi- pi0)'      
c         9:     ' eta-prime -> pi0 pi0 eta (eta ->pi+ pi- gamma)'    
c        10:     ' eta-prime -> rho0 gamma (rho0 ->pi+ pi-)'          
c
 3051 CALL PST_GGRPS(genpar(1), 3, MDEC, dumm, 4.28, KVDM,genpar(5),
     +               genpar(6),genpar(7))
c
      if(KODtag.gt.0) then
c
        CALL TS_TAG(305,genpar(1),KODtag1,ICALLS,ICALLS1,ICALLS2)
c
        IF(KODtag1.lt.KODtag) GOTO 3051
      end if
c
        if(IEVENT.EQ.NEVENT) print 3022,(1.*ICALLS1)/ICALLS,
     *  (1.*ICALLS2)/ICALLS         ! print ts-hits
c
      if(IEVENT.NE.NEVENT) goto 333
c
c  Print at end of simulation
c
        ALT=NEVENT/TSEC
        PRINT 400,TSEC,ERSEC,ALT,FM,NGT 
c
      goto 333
c
c----------------------------------------------------------------------
 306  continue
c
c     e+e- -> e+e- + mu+mu-(gamma) (F.A.Berends e.a)
c  or  
c     e+e- -> e+e- + tau+tau-(gamma) (F.A.Berends e.a)
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
c
c    Parameters:
c 
c     genpar(1)= Ebeam
c     genpar(2)= KODtag = 0,1,2 - tagging of sc.el.
c     genpar(3)= regime (0-generator, /=0 +cross section estimation)
c     genpar(4)= Kmin(gamma), 
c     genpar(5)= min inv.mass mu+mu- or tau+tau- in GeV,
c     genpar(6)= majoranta
c     genpar(7)= 0/1: two-photon production mu+mu-/ tau+tau-
c
      KODtag=genpar(2)
c
 3061 call gen_ggmmg(genpar(1),igenpar(3),genpar(4),genpar(5),genpar(6),
     +               igenpar(7))
c
      if(KODtag.gt.0) then
c
        CALL TS_TAG(306,genpar(1),KODtag1,ICALLS,ICALLS1,ICALLS2)
c
        IF(KODtag1.lt.KODtag) GOTO 3061
      end if
c
      DO I=1,NPART
        PLAB(1)=P41(1,I)
        PLAB(2)=P41(2,I)
        PLAB(3)=P41(3,I)
        ITYPE=IPART(I)
c
        IF(IGENPAR(7).EQ.1) THEN
          IF(I.EQ.3) ITYPE=51         ! tau+  should decay in kedr_dec.dat
          IF(I.EQ.4) ITYPE=52         ! tau-  ............................
        END IF
c
        call gskine(plab,itype,nvert,0,0,nt)
c
        NTRACK=I
        IPARTICLE(I)=ITYPE
c
        EPART(I)=P41(4,I)
        PXPART(I)=PLAB(1)
        PYPART(I)=PLAB(2)
        PZPART(I)=PLAB(3)
c
        IF(IPRTRK.EQ.1) PRINT 397,IEVENT,I,ITYPE,PLAB,VERTEX
c
      END DO
c
      if(IEVENT.EQ.NEVENT) print 3022,(1.*ICALLS1)/ICALLS,
     *  (1.*ICALLS2)/ICALLS
      RETURN
c------------------------------------------------------------

 307  continue
c
c  e+e- -> e+e- + e+e- (F.A.Berends e.a., all diagrams)
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
c   Parameters:
c
c   genpar(1)= Ebeam
c   genpar(2)= option of cut: 0 - no cut, 1,2 - tagging
c   genpar(3)= Numb.of events for cr.sec est (if <1000, then changed to 1000)
c   genpar(4)= WEID(1) - weight of multipheriph. subgenerator
c   genpar(5)= WEID(2) - weight of bremsstr. subgenerator
c   genpar(6)= WEID(3) - weight of conversion subgenerator
c   genpar(7)= WEID(4) - weight of annihil. subgenerator
c   genpar(8)= min inv.mass e+e-, 
c   genpar(9)= max inv.mass e+e, 
c   genpar(10)= min angle of secondary particle in Central Detector (deg.)
c   genpar(11)= max angle of secondary particle in CD (deg.)
c   genpar(12)= majoranta (1.0 or less)
c
c   igenpar(3) /=0: cross section calculation before events generation
c
      KODtag=igenpar(2)
      KODTAG1=IGENPAR(3)
      IF(KODTAG1.LT.1000) KODTAG1=1000 ! cr.section is estimated by min 1000 ev
      WEID(1)=IGENPAR(4)
      WEID(2)=IGENPAR(5)
      WEID(3)=IGENPAR(6)
      WEID(4)=IGENPAR(7)
c
 3071 call GEN_GGEE(genpar(1),KODTAG1,WEID,genpar(8),genpar(9),
     &              genpar(10),genpar(11),genpar(12))
c
      IF(KODTAG.GT.0) THEN  
c
        CALL TS_TAG(307,genpar(1),KODTAG1,ICALLS,ICALLS1,ICALLS2)
c
        IF(KODtag1.lt.KODtag) GOTO 3071
      END IF
c
      DO I=1,NPART
        PLAB(1)=P41(1,i)
        PLAB(2)=P41(2,i)
        PLAB(3)=P41(3,i)
        ITYPE=IPART(i)
c
        call gskine(plab,itype,nvert,0,0,nt)
c 
        NTRACK=I
        IPARTICLE(I)=ITYPE
        EPART(I)=P41(4,I)
        PXPART(I)=PLAB(1)
        PYPART(I)=PLAB(2)
        PZPART(I)=PLAB(3)
c
        IF(IPRTRK.EQ.1) PRINT 397,IEVENT,I,ITYPE,PLAB,VERTEX
c
      end do
c
      IF(IEVENT.EQ.NEVENT) THEN
        PRINT 3022,(1.*ICALLS1)/ICALLS,(1.*ICALLS2)/ICALLS
        PRINT 3023,(1.*NEVENT)/CROSEC 
      END IF
c
      RETURN
c
c------------------------------------------------------------
c
 308  continue
c
c  e+e- -> J/psi(pis') -> VP (vector + psevdoscalar meson)
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
c   Parameters genpar(1-7): 

c      genpar(1): 1 for R=J/psi, 2 for R=psi'-meson
c      genpar(2): 1-11 decay mode of R
c      genpar(3): decay mode of vector meson
c      genpar(4): decay mode of psevdoscalar meson
c
      call PST_PSIVP(igenpar(1),igenpar(2),igenpar(3),igenpar(4))
c
      goto 333
c
c------------------------------------------------------------
c
 309  continue
c
c  e+e- -> e+e- + X (any GEANT particle, X=pseudoscalar)
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      KODTAG=IGENPAR(2)
      ITYP=IGENPAR(3)       ! Geant typ of particle produced in gg
      ITHEP=INDP(ITYP)
      KVDM=GENPAR(4)+0.5
c
      CALL PST_PPAR(ITHEP,ANAME,APMASS,WIDTH,CHRG,SPIN,CTAU) ! X parameters
c
 3091  CALL PST_GGRPS(GENPAR(1),0,MDUM,APMASS,1.,KVDM,GENPAR(5),
     +               GENPAR(6),GENPAR(7))
c
      IF(KODTAG.GT.0) THEN
c
        CALL TS_TAG(304,GENPAR(1),KODTAG1,ICALLS,ICALLS1,ICALLS2)
c
        IF(KODTAG1.LT.KODTAG) GOTO 3091
      END IF
c
      IF(IEVENT.NE.NEVENT) GOTO 333
c
c  Print at end of simulation 
c
      ALT=NEVENT/TSEC
      PRINT 400,TSEC,ERSEC,ALT,FM,NGT 
c
c------------------------------------------------------------------
c
 333  NTRACK=0
c
      DO 3032 I=1,NPS
   	IF(KPS(3,I).ne.0) goto 3032  ! here - daughter of int. resonance
c
        if(kgen.eq.309.and.i.eq.3) KPS(1,i)=ithep
 	KHE=KPS(1,i)              ! HEP-code of particle
c
 	call pst_pcode1(KHE,KGE)  ! HEP-code -> GEANT-code
c
 	plab(1)=pps(1,i)
 	plab(2)=pps(2,i)
 	plab(3)=pps(3,i)
        ITYPE=KGE
c
        CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
 	NTRACK=NTRACK+1
        IPARTICLE(NTRACK)=itype
 	epart(NTRACK)=pps(4,I)
 	pxpart(NTRACK)=plab(1)  
 	pypart(NTRACK)=plab(2)  
	pzpart(NTRACK)=plab(3)  
c
        IF(IPRTRK.EQ.1) PRINT 397,IEVENT,NTRACK,ITYPE,PLAB,VERTEX
c
 3032 continue 
c
      GOTO 999
c
c------------------------------------------------------------
c
 310  CONTINUE
c
c  This generator reads a event from file
c
c                         file   were read events  particles  in  
c                          |           |              |        |  
      CALL GEN_REVENT(IGENPAR(1), IGENPAR(2), NEVREAD, NPART, ARREVT)
c
c  IGENPAR(1)= 1-10 - file
c  IGENPAR(2)       - maximum number of events in file
c  NEVREAD          - were read events from file
c  NPART            - particles (tracks) in the event
c  ARREVT           - array with the event
c
      VERTEX(1)=VERTEX(1)+ARREVT(5,1)   ! addition to vertex of event is used
      VERTEX(2)=VERTEX(2)+ARREVT(6,1)   ! from 1-st particle in file
      VERTEX(3)=VERTEX(3)+ARREVT(7,1)   ! 
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
       NTRACK=0
c
 	DO 3101 I=1,NPART
          RE_INT=ARREVT(1,I)
          ITYPE=INT_RE          ! particle type
          PLAB(1)=ARREVT(2,I)   ! Px
 	  PLAB(2)=ARREVT(3,I)   ! Py
          PLAB(3)=ARREVT(4,I)   ! Pz
c
 	  IF(IPRTRK.EQ.1) PRINT 397,IEVENT,I,ITYPE,PLAB,VERTEX
c
          CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
          NTRACK=NTRACK+1
          IPARTICLE(NTRACK)=ITYPE
c
          CALL GFPART(ITYPE,CHNPAR,ITRTYP,PMASS,CHARGE,TLIFE,UB,NWB)
c
          EPART(NTRACK)=SQRT(PLAB(1)**2+PLAB(2)**2+PLAB(3)**2+PMASS**2)
          PXPART(NTRACK)=PLAB(1) 
          PYPART(NTRACK)=PLAB(2) 
          PZPART(NTRACK)=PLAB(3) 
 3101 CONTINUE 
c
      GOTO 999
c
c------------------------------------------------------------
c
 311  CONTINUE
c
c  Generator e+e- -> psi' -> psi(->l+l-) +pi+pi-
c
      if (IGENPAR(1).eq.0) then
C     only pi+pi- - no J/psi product for trigger estimation
        CALL PST_PSI1(1)
      else
c                   decay mode of J/psi
c                      |	
        CALL PST_PSI1(IGENPAR(1))
      endif
c
c  IGENPAR(1)=0 : no J/psi - only pi+pi-
C            =1 : J/psi->e+e-
c            =2 : J/psi->mu+mu-
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      NTRACK=0

      DO 3111 I=1,4
c
C       only pi+pi- - no J/psi product for trigger estimation
        if ((IGENPAR(1).eq.0).and.(I.eq.3)) GOTO 999

        KHE=KPS(1,I+1)              ! HEP-code of particle
c
        CALL PST_PCODE1(KHE,KGE)  ! HEP-code -> GEANT-code
c
        PLAB(1)=PPS(1,I+1)
        PLAB(2)=PPS(2,I+1)
        PLAB(3)=PPS(3,I+1)
        ITYPE=KGE
c
        CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
        NTRACK=NTRACK+1
        IPARTICLE(NTRACK)=ITYPE
        EPART(NTRACK)=PPS(4,I+1) 
        PXPART(NTRACK)=PLAB(1) 
        PYPART(NTRACK)=PLAB(2) 
        PZPART(NTRACK)=PLAB(3) 
        IF(IPRTRK.EQ.1) PRINT 397,IEVENT,I,ITYPE,PLAB,VERTEX
 3111 CONTINUE
c
      GOTO 999
c
c-------------------------------------------------------------------
c
 312  CONTINUE
c
c  KGEN=312 - prints inform. about movement of particles of event 
c
      IF(IFIX(GENPAR(1)).LT.1.OR.IFIX(GENPAR(1)).GT.2) THEN
        PRINT *,' '
        PRINT *,' Wrong regime KPRINT in generator 312'
      	PRINT *,' '
        STOP
      END IF
c
      ITYPE = GENPAR(2)+0.5  ! particle type: is it in /PSPIND/ ?
      IF(IFIX(GENPAR(1)).EQ.1) THEN  ! 1-st regime: geantino
        ITYPE=48
        GENPAR(2)=48.
      END IF
c
      IF(IEVENT.EQ.1) PRINT 3121,(GENPAR(J),J=1,16)
      IF(ITYPE.LT.0.OR.(ITYPE.GT.33.AND.ITYPE.LT.44).OR.ITYPE.GT.NGNT)
     +   THEN
        PRINT *,' '
        PRINT *,' Error in generator # 312: wrong particle type = '
     $     ,ITYPE
        PRINT *,' '   
        STOP
      ENDIF
c
      VERTEX(1)=GENPAR(4)
      VERTEX(2)=GENPAR(5)
      VERTEX(3)=GENPAR(6)
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      IF(IFIX(GENPAR(1)).EQ.2) ITYPE=IFIX(GENPAR(2))  ! particle type
      PP=GENPAR(3)           ! particle momentum GeV/c
c
      PLAB(1)=PP*SIN(GENPAR(7)*DEGRAD)*COS(GENPAR(8)*DEGRAD)
      PLAB(2)=PP*SIN(GENPAR(7)*DEGRAD)*SIN(GENPAR(8)*DEGRAD)
      PLAB(3)=PP*COS(GENPAR(7)*DEGRAD)
c
      CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
      NTRACK=0
      NTRACK=NTRACK+1
      IPARTICLE(NTRACK)=ITYPE
c
      CALL GFPART(ITYPE,NAMPART,ITRTYPE,PAMASS,PCHARGE,PTLIFE,UB,NWB)      
c
      EPART(NTRACK)=SQRT(PP**2+PAMASS**2)
      PXPART(NTRACK)=PLAB(1)
      PYPART(NTRACK)=PLAB(2)
      PZPART(NTRACK)=PLAB(3)
c
      IF(IPRTRK.EQ.1) THEN
        PRINT 397,IEVENT,IPRTRK,ITYPE,PLAB,VERTEX 
        KGEN=KGEN0
      END IF
c
c  Test prints are being performed from gustep.f
c
      GOTO 999
c
c-----------------------------------------------------------------------
c
c   Generator ee->tau tau (gamma) (KORAL-B)
c
 313  CONTINUE
c
c
c  Input parameters:                                                
c                                                                   
c GENPAR(1)    ENE -  energy of beam (GeV)                
c IGENPAR(2,3)       JAK1,JAK2  - number of tau decay mode      
c               = 1 - electron mode           
c               = 2 - muon mode               
c               = 3 - pion mode               
c	        = 4 - rho mode                
c	        = 5 - a1 mode                                         
c	        = 6 - K mode                                          
c	        = 7 - K* mode                                           
c	        = 8 - nPi mode                                          
c	        = 0 - inclusive (decays into all), JAK=1,2,3,4,5,6,7,8  
c IGENPAR(4)   ISPIN - (1)  switch for spin effects in tau decay              
c IGENPAR(5)   ITFIN - (1)  switch, if >1 - generation of other pairs than tau
c IGENPAR(6)   KEYGSW - (1) interference between gamma and Z exchange is incl.
c IGENPAR(7)   IFZET -  (0) switch for full implementation of Z               
c IGENPAR(8)   KEYRAD - (1) switch for QED bremmstrahlung                     
c IGENPAR(9)   ITDKRC - (1) switch for bremmstrahlung in tau decay            
c IGENPAR(10)  ITRANS - (1) switch for transverse spin correlations   
c GENPAR(11)   XK0 - (0.005) soft/hard photon cut-off for QED bremsstr.
c
c
      CALL GEN_KORALB(GENPAR(1),IGENPAR(2),IGENPAR(3),IGENPAR(4),
     +          IGENPAR(5),IGENPAR(6),IGENPAR(7),IGENPAR(8),IGENPAR(9),
     +          IGENPAR(10),GENPAR(11),NSTABL,KPART,EVENT)
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      NTRACK=0
c
      DO 3131 I=1,NSTABL
        ITYPE=KPART(I)          ! particle type
        PLAB(1)=EVENT(1,I)	! Px
        PLAB(2)=EVENT(2,I)	! Py
 	PLAB(3)=EVENT(3,I)	! Pz
c
        IF(IPRTRK.EQ.1)  PRINT 397,IEVENT,I,ITYPE,PLAB,VERTEX
c
        CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
        NTRACK=NTRACK+1
        IPARTICLE(NTRACK)=ITYPE
c
        CALL GFPART(ITYPE,CHNPAR,ITRTYP,PMASS,CHARGE,TLIFE,UB,NWB)
c
        EPART(NTRACK)=SQRT(PLAB(1)**2+PLAB(2)**2+PLAB(3)**2+PMASS**2)
        PXPART(NTRACK)=PLAB(1) 
        PYPART(NTRACK)=PLAB(2) 
        PZPART(NTRACK)=PLAB(3) 
c
 3131 CONTINUE 
c
      GOTO 999
c----------------------------------------
c
c   Generator ee->2 particles ( ds/dz = A+Bz+Cz^2, z=cos(teta) )
c   i.e. PS PS: distribution ds/dz ~ 1-z^2              
c
 314  CONTINUE
c
c
c  Input parameters:                                                  
c                                                                
c GENPAR(1)   <W> -  average energy of collision (GeV)                
c GENPAR(2)   SIG_W - sigma of total energy of collision (Gev)
c IGENPAR(3)  GEANT type of 1-st particle
c IGENPAR(4   GEANT type of 2-nd particle
c GENPAR(5)   A
c GENPAR(6)   B
c GENPAR(7)   C
c
      CALL PST_ABC(GENPAR(1),GENPAR(2),IGENPAR(3),IGENPAR(4),GENPAR(5),
     +             GENPAR(6),GENPAR(7))  
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      NTRACK=0
c
      DO 3141 I=1,NPS
 	IF(KPS(3,I).NE.0) goto 3141  ! should be last daughter of int.res.
        ITYPE=0
        KODHEP=KPS(1,I)
c
 	CALL PST_PCODE1(KODHEP,ITYPE)  ! KF code -> GEANT code
c
 	IF(ITYPE.EQ.0) THEN
 	  print *,' GUKINE_T: for gen.314 unknown type of particle',
     +            KPS(1,I)
 	 	  STOP
        END IF
c
 	PLAB(1)=PPS(1,I)
 	PLAB(2)=PPS(2,I)
 	PLAB(3)=PPS(3,I)
c	                
 	CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
 	NTRACK=NTRACK+1
 	IPARTICLE(NTRACK)=ITYPE
 	EPART(NTRACK)=PPS(4,I) 
 	PXPART(NTRACK)=PLAB(1) 
 	PYPART(NTRACK)=PLAB(2) 
        PZPART(NTRACK)=PLAB(3) 
	IF(IPRTRK.EQ.1) PRINT 397,IEVENT,NTRACK,ITYPE,PLAB,VERTEX
 3141   CONTINUE
c
      GOTO 999
c----------------------------------------------------------------------
c
 315  CONTINUE
c
c  Generator e+e- -> psi' -> ...
c
c  IGENPAR(1): number of decay mode:
c
c  0 - all
c  1 - e+ e-
c  2 - mu+ mu-
c  3 - rndmflav
c  4 - J/psi pi+ pi-
c  5 - J/psi pi0 pi0
c  6 - J/psi eta0
c  7 - J/psi pi0 
c  8 - chi_c0 gamma
c  9 - chi_c1 gamma
c  10 -chi_c2 gamma
c  11 -eta_c gamma
c
c  IGENPAR(2)=1 - include f. s. r. c.
c
      KC_PSI1=LUCOMP(30443)	      ! kc - short code of paticle psi'
      ECM=PMAS(KC_PSI1,1)
c
      IF(IGENPAR(1).LT.0.OR.IGENPAR(1).GT.11) THEN ! error
        PRINT 3152,IGENPAR(1)
        STOP
      END IF
c
      IF(IEVENT.EQ.1) THEN
        PRINT 3151,IGENPAR(1),T315(IGENPAR(1)+1),IGENPAR(2),ECM  ! print title
c
        IF(IGENPAR(2).EQ.1) CALL PHOINI  ! initialization of PHOTOS
c
      END IF       
c
      CALL LU1ENT(-1,30443,ECM,0.,0.) ! new particle: psi', teta=0, fi=0
c
      NB_CHAN=MDCY(KC_PSI1,3)         ! number of channals for psi' decay
      I1_CHAN=MDCY(KC_PSI1,2)         ! position of 1-st channal
c
      IMODE=IGENPAR(1)
c
      IF(IMODE.GT.0) THEN
c
        DO I=1,NB_CHAN                ! select necessary decay mode 
          IDC=I1_CHAN+I-1
  	  IF(I.NE.IMODE) MDME(IDC,1)=0
        END DO
c
      END IF
c
      CALL LUEXEC	  ! calls chain of fragmentations and decays
c
c      CALL LUEDIT(2)	  ! excludes unstable or undetectable particles
c
c======
      IF(IGENPAR(2).EQ.1) THEN  ! f.s. rad. corr. by PHOTOS
c
        CALL LUHEPC(1)        ! Conversion from JETSET to /HEPEVT/ standard
c
        NEVHEP=IEVENT
c
c        CALL PHODMP           ! Write event record before emission...
c
        CALL PHOTOS(1)        ! Generate photon(s)...
c
c        PRINT 9050            ! Write event record...
c        PRINT 9040
c
c        CALL PHODMP           ! Write event record after emission...
c
c        PRINT 9000
c        PRINT 9010
c        PRINT 9020
c        PRINT 9030
c        PRINT 9020
c        PRINT 9010
 9000 FORMAT(1H1)  
 9010 FORMAT(1H ,80('*'))
 9020 FORMAT(1H ,'*',78X,'*')
 9030 FORMAT(1H ,'**** PHOTOS Test Run has successfully ended',32X,
     &' ****')
 9040 FORMAT(1H ,26X,'=== after PHOTOS: ===')
 9050 FORMAT(1H0,80('='))
c
        CALL LUHEPC(2)        ! Conversion from /HEPEVT/ to JETSET standard
c
      END IF
c
c=====
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      NTRACK=0
c
      DO I=1,N          
        ITYPE=0
        KS=KK(i,1)
        KODHEP=KK(I,2)
c
        IF(KS.EQ.1.OR.KS.EQ.4) THEN
c
        CALL PST_PCODE1(KODHEP,ITYPE)  ! KF code -> GEANT code
c
 	IF(ITYPE.EQ.0) THEN
          write(6,*)' Gen.315: unknown type of particle', kk(i,2)
          STOP
        END IF
c
        PLAB(1)=P(I,1)
        PLAB(2)=P(I,2)
        PLAB(3)=P(I,3)      
        IF(IPRTRK.EQ.1) PRINT 397,IEVENT,I,ITYPE,PLAB,VERTEX
 	                                    
        CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
        NTRACK=NTRACK+1
 	IPARTICLE(NTRACK)=ITYPE
 	EPART(NTRACK)=EN1
 	PXPART(NTRACK)=PLAB(1)
 	PYPART(NTRACK)=PLAB(2)
 	PZPART(NTRACK)=PLAB(3)
c	
      END IF
c
      END DO
c
      GOTO 999
c
c----------------------------------------------------------------------
c
 316  CONTINUE   
c
c  Generator e+e- -> gamma + X (d.f. for gamma: 1+cos^2 teta)
c
c  Input parameters:
c                   

c  GENPAR(1)   <W> = <2 x Ebeam> -  average lab energy of collision (GeV)
c  GENPAR(2)   SIGMA_W - of total energy of collision (Gev)
c  IGENPAR(3)  GEANT type of particle X.
c              (for original GEANT (type 1-32,45-50) - without decays here,
c               for extended GEANT (type > 50) - decays are performed here)
c  Photon energy is determined inside generator
c
      CALL PST_GAMMA_X(GENPAR(1),GENPAR(2),IGENPAR(3))      
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      NTRACK=0
c
      DO 3161 I=1,NPS 
        IF(KPS(3,I).NE.0) goto 3161  ! should be last daughter of int.res.
        ITYPE=0
        KODHEP=KPS(1,I)
c
 	CALL PST_PCODE1(KODHEP,ITYPE)  ! KF code -> GEANT code
c
 	IF(ITYPE.EQ.0) THEN
 	  print *,' GUKINE_T: for gen.316 unknown type of particle', 
     +            KPS(1,I)
 	  STOP
 	END IF
c
 	PLAB(1)=PPS(1,I)
 	PLAB(2)=PPS(2,I)      
 	PLAB(3)=PPS(3,I)      
c 	                                    
 	CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
        NTRACK=NTRACK+1
        IPARTICLE(NTRACK)=ITYPE
        EPART(NTRACK)=PPS(4,I)
        PXPART(NTRACK)=PLAB(1)
        PYPART(NTRACK)=PLAB(2)
        PZPART(NTRACK)=PLAB(3)
        IF(IPRTRK.EQ.1) PRINT 397,IEVENT,NTRACK,ITYPE,PLAB,VERTEX
 3161   CONTINUE
c
      GOTO 999
c
c----------------------------------------------------------------------
   
 317  CONTINUE
c
c  Generator e+e- -> e+e- + e+e-(mu+ mu-) (J.A.M.Vermaseren)
c
c  Input parameters:
c
c  GENPAR(1)  - (EB) Energy of beam in GeV     
c  IGENPAR(2) - (IPROC) process: 
c             1 - e+e- -> e+e- + e+e- (main diagrmas) 
c             2 - e+e- -> e+e- + e+e- (Bremssthrahlung diagrmas only)
c             3 - e+e- -> e+e- + e+e- (main + Bremsstr. diagrmas)
c             4 - e+e- -> e+e- + e+e- (main + identical particle eff)
c             5 - e+e- -> e+e- + e+e- (main + Bremsstr. + identical eff)
c             6 - e+e- -> e+e- + mu+mu- (main diagrmas)
c             7 - e+e- -> e+e- + mu+mu- (main +Bremsstr. diagrmas)  
c  IGENPAR(3) - (NIT)  NIT >= 0 - iterations with calc. of grid for simulation  
c  IGENPAR(4) - (NPR)  < 0 - there are not any prints from integration
c                      = 0 - print initial data for int. and final results
c                      = 1   as =0 + prit for evry iteration
c                      = 2   as =1 + print grid
c  IGENPAR(5) - (NCAL) approximate number of integrand evaluations
c  GENPAR(6)  - (FMAJ) majoranta for this process and energy, if FMAJ<=0.
c                it is determined by generator
c  Output:
c 
c  VEPART(4,4) - P,E - parameters of generated particles
c  ITER,TI1,TS1 - iterations, int., accum. int.
c
      CALL GEN_VERMAS(GENPAR(1),IGENPAR(2),IGENPAR(3),IGENPAR(4),
     +     IGENPAR(5),GENPAR(6),VEPART,ITER,TI1,TS1,AVGI,SD,CHI2A)
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      NTRACK=0
c
      DO 3171 I=1,4
        PLAB(1)=VEPART(I,1)                    
        PLAB(2)=VEPART(I,2)                    
        PLAB(3)=VEPART(I,3)
        IF(I.EQ.1) ITYPE=2
        IF(I.EQ.2) ITYPE=3
c
        IF(I.EQ.3) THEN
          ITYPE=2  ! e+
          IF(IGENPAR(2).GE.6) ITYPE=5  ! mu+
        END IF
c
        IF(I.EQ.4) THEN
          ITYPE=3  ! e-
          IF(IGENPAR(2).GE.6) ITYPE=6  ! mu-
        END IF                              
c                                           
        CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
        NTRACK=NTRACK+1
        IPARTICLE(NTRACK)=ITYPE
        EPART(NTRACK)=VEPART(I,4)
        PXPART(NTRACK)=PLAB(1)
        PYPART(NTRACK)=PLAB(2)
        PZPART(NTRACK)=PLAB(3)
        IF(IPRTRK.EQ.1) PRINT 397,IEVENT,NTRACK,ITYPE,PLAB,VERTEX
 3171 CONTINUE
c
      IF(IEVENT.EQ.NEVENT) THEN
c
        IF(IGENPAR(4).EQ.0) PRINT 3173,ITER,TI1*1000,TS1*1000,AVGI*1000,
     +                      SD*1000,CHI2A      ! results of last iteration
c
        PRINT 3172,INPMAJ,FMAXI
      END IF
c
      GOTO 999
c
c----------------------------------------------------------------------

 318  CONTINUE
c
c  Generator e+e- -> e+e- + (tau+ tau-) (J.A.M.Vermaseren)                   
c
c  Input:
c
c  GENPAR(1)  - (EB) Energy of beam in GeV
c  IGENPAR(2) - (NIT)  NIT >= 0 - iterations with calc. of grid for simulation
c  IGENPAR(3) - (NPR)  < 0 - there are not any prints from integration
c                      = 0 - print initial data for int. and final results
c                      = 1   as =0 + prit for evry iteration
c                      = 2   as =1 + print grid
c  IGENPAR(4) - (NCAL) approximate number of integrand evaluations
c  GENPAR(5)  - (FMAJ) majoranta for this process and energy, if FMAJ<=0.
c                it is determined by generator
c  Output:
c 
c  VEPART(4,4) - P,E - parameters of generated particles
c  ITER,TI1,TS1 - iterations, int., accum. int.
c
      CALL GEN_VERMAS(GENPAR(1),8,IGENPAR(2),IGENPAR(3),  ! 8:2tau, main diag.
     +     IGENPAR(4),GENPAR(5),VEPART,ITER,TI1,TS1,AVGI,SD,CHI2A)
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      NTRACK=0
c
      DO 3181 I=1,4
        PLAB(1)=VEPART(I,1)
        PLAB(2)=VEPART(I,2)
        PLAB(3)=VEPART(I,3)
        IF(I.EQ.1) ITYPE=2  ! e+
        IF(I.EQ.2) ITYPE=3  ! e-
        IF(I.EQ.3) ITYPE=51 ! tau+
        IF(I.EQ.4) ITYPE=52 ! tau-                              
c	                                    
 	CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
 	NTRACK=NTRACK+1
 	IPARTICLE(NTRACK)=ITYPE
        EPART(NTRACK)=PPS(4,I)
 	PXPART(NTRACK)=PLAB(1)   
 	PYPART(NTRACK)=PLAB(2)   
 	PZPART(NTRACK)=PLAB(3)   
 	IF(IPRTRK.EQ.1) PRINT 397,IEVENT,NTRACK,ITYPE,PLAB,VERTEX
 3181 CONTINUE
c
      IF(IEVENT.EQ.NEVENT) THEN
c
 	IF(IGENPAR(3).EQ.0) PRINT 3173,ITER,TI1*1000,TS1*1000,AVGI*1000,
     +                      SD*1000,CHI2A  ! results of last iteration
c
 	PRINT 3172,INPMAJ,FMAXI
      END IF
c
      GOTO 999
c
c----------------------------------------------------------------------
 319  CONTINUE
c
c  Generator e+e- -> e+e- + pi+pi- 
c
c  Input:
c
c  GENPAR(1)  - Energy of beam in GeV
c  IGENPAR(2) - regim of calc. of cross-section                            
c                 1 - Born, lambda=0                                  
c                 2 - Born, lambda=2                                  
c                 3 - Born(lambda=0) + Born(lambda=2)                           
c                 4 - Born(l=0)+interf.ampl. |Born(l=2) + f_2(1270)| 
c                 5 - f_2(1270)                                       
c   GENPAR(3)-GENPAR(4) - inv. masses (GeV) interval                            
c   IGENPAR(5) - key  Vector Dom. model: 1 - included                     
c   GENPAR(6)  - cut on momenter transfer squared t1 (t1<0) for subr. INV 
c   GENPAR(7)  - cut on momenter transfer squared t2 (t2<0) for subr. INV 
c   GENPAR(8)  - majoranta for generation events with W=1                 
c                                                                     
      CALL PST_GG2PI(GENPAR(1),IGENPAR(2),GENPAR(3),GENPAR(4),IGENPAR(5)
     &              ,GENPAR(6),GENPAR(7),GENPAR(8))
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      NTRACK=0
c
      DO I=1,4
        PLAB(1)=PPS(1,I)
        PLAB(2)=PPS(2,I)
        PLAB(3)=PPS(3,I)
c             
        IF(I.EQ.1) ITYPE=3  ! e-
        IF(I.EQ.2) ITYPE=2  ! e+
        IF(I.EQ.3) ITYPE=9  ! pi-
        IF(I.EQ.4) ITYPE=8  ! pi+
c                                
        CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
        NTRACK=NTRACK+1
        IPARTICLE(NTRACK)=ITYPE
        EPART(NTRACK)=PPS(4,I)
        PXPART(NTRACK)=PLAB(1)   
        PYPART(NTRACK)=PLAB(2)   
        PZPART(NTRACK)=PLAB(3)   
        IF(IPRTRK.EQ.1) PRINT 397,IEVENT,NTRACK,ITYPE,PLAB,VERTEX
      END DO
c
      IF(IEVENT.EQ.NEVENT) THEN          ! last event
c
        ALT=NEVENT/TSEC
        PRINT 400,TSEC,ERSEC,ALT,FM,NGT
      END IF
c
      GOTO 999
c
c----------------------------------------------------------------------
 320  CONTINUE   !  KMD-generator (MCGPJ)
c
c  KMD-generator (used e+e- -> e+e-, mu+mu-, tau+tau- with r.c.)
c
c  Input:
c
c  GENPAR(1)  - Energy of beam in GeV
c  IGENPAR(2) - process: 
c               1 - Bhabha, 
c               2 - mu+mu-,
c               3 - tau+tau-
c  GENPAR(3)  - accuracy of cr.sec in nb
c  GENPAR(4)  - min. angle with axis, degrees
c  GENPAR(5)  = 0/1 - calculation outside/inside resonance   
c
      EBEAM=GENPAR(1)*1000      ! Beam energy, GeV ->MeV
      IPROC=IGENPAR(2)-1        ! now 0-2
      IF(IPROC.EQ.2) IPROC=5    
      ACC=GENPAR(3)             ! Accuracy of cr.sec, nb
      ANGMIN=GENPAR(4)*PI/180.  ! deg -> rad      
c
      IF(IGENPAR(2).LT.1.OR.IGENPAR(2).GT.3) THEN 
        PRINT 3201,IPROC+1       ! pi+pi-, KSKL, K+K- are excluded, since ff 
c                                 are not valid at our energy
        STOP 
      END IF 
c
      IF(IEVENT.EQ.1) THEN  ! first event - initialization of generator
c
        PRINT 324,IGENPAR(2),TEXT320(IGENPAR(2)),GENPAR(1),GENPAR(3),
     &            GENPAR(4),IGENPAR(5)

        CALL INIT_PRIME_GEN(IPROC,EBEAM,ACC,ANGMIN,IGENPAR(5)) 
      END IF
c
      CALL MAKEEVENT(QQ,ISORT,NPRT)  ! event of MCGPJ
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      NTRACK=0
c
      DO 322 I=1,NPRT                     ! cycle on particles from MCGPJ
c
        IF(ISORT(I).EQ.1.AND.QQ(4,I).LE.0.) GOTO 322  ! P(photon) <= 0 
c
        PLAB(1)=QQ(4,I)*QQ(1,I)     ! Px in GeV
        PLAB(2)=QQ(4,I)*QQ(2,I)
        PLAB(3)=QQ(4,I)*QQ(3,I)
        ITYPE=ISORT(I) ! 51, 52: tau+-  should decay in kedr_dec.dat
c
       CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
        NTRACK=NTRACK+1
        IPARTICLE(NTRACK)=ITYPE           ! GEANT-code:1,2,...,51,52
        EPART(NTRACK)=SQRT(QQ(4,I)**2+AMASS(ITYPE)**2)  ! energy in GeV
        PXPART(NTRACK)=PLAB(1)        
        PYPART(NTRACK)=PLAB(2) 
        PZPART(NTRACK)=PLAB(3) 
        IF(IPRTRK.EQ.1) PRINT 397,IEVENT,NTRACK,ITYPE,PLAB,VERTEX
 322    CONTINUE
c
      IF(IEVENT.EQ.NEVENT) THEN         ! last event
c
        CALL GENFINISH                  ! finish of work of KMD-generator

c        ALT=NEVENT/TSEC
c        PRINT 400,TSEC,ERSEC,ALT,FM,NGT
      END IF

c
c----------------------------------------------------------------------
 321  CONTINUE   !  Bremmstrahlung-generator 
c
c  Generator  e+e- -> e+e- gamma in lowest order with
c  account of effect of impact parameters limitation
c
c  Input:
c
c  GENPAR(1)  - Energy of beam in GeV (<7.5 GeV)
c  GENPAR(2)  - photon min. energy (>0.0015 GeV)
c  GENPAR(3)  - horizontal beam size, cm
c  GENPAR(4)  - vertical beamsize, cm
c  GENPAR(5)  - horizontal beta-function, cm
c  GENPAR(6)  - vertical beta-function, cm
c  IGENPAR(7) - phot. direction (0 -both, 1 - in e- dir., 2 - in e+ dir.)         
c  IGENPAR(8) - 1 - include impact parameters limitation
c  IGENPAR(9) - 1 - include beam angular spread 
c  GENPAR(10) - majoranta, if <=0, estimation in program
c
      EBEAM=GENPAR(1)
      OMEMIN=GENPAR(2)
      HSIGB=GENPAR(3)
      VSIGB=GENPAR(4)
      HBET=GENPAR(5)
      VBET=GENPAR(6)
      FMAX=GENPAR(10)
c
      CALL PST_BREM(EBEAM,OMEMIN,HSIGB,VSIGB,HBET,VBET,IGENPAR(7),
     &  IGENPAR(8),IGENPAR(9),FMAX,ELEFIN,PHOFIN,SECBREM,ERRBREM,WMAX) 
c
      CALL GSVERT(VERTEX,0,0,0,0,NVERT)
c
      NTRACK=0
c
c  Secondary e- (e+)
c
      DO I=1,3
        PLAB(I)=ELEFIN(I)
      END DO
c
      IF(IGENPAR(7).EQ.1) THEN
        ITYPE=3
        GOTO 3211      
      END IF
c
      IF(IGENPAR(7).EQ.2) THEN
        ITYPE=2
        GOTO 3211
      END IF
c
      ITYPE=3
      IF(ELEFIN(3).LT.0.) ITYPE=2
c
 3211 CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
      NTRACK=NTRACK+1
      IPARTICLE(NTRACK)=ITYPE
      EPART(NTRACK)=ELEFIN(4)
      PXPART(NTRACK)=ELEFIN(1)
      PYPART(NTRACK)=ELEFIN(2)
      PZPART(NTRACK)=ELEFIN(3)
      IF(IPRTRK.EQ.1) PRINT 397,IEVENT,NTRACK,ITYPE,PLAB,VERTEX
c
c  Bremsstrahlung photon
c
      DO I=1,3
        PLAB(I)=PHOFIN(I)
      END DO
c
      ITYPE=1
c
      CALL GSKINE(PLAB,ITYPE,NVERT,0,0,NT)
c
      NTRACK=NTRACK+1
      IPARTICLE(NTRACK)=ITYPE
      EPART(NTRACK)=PHOFIN(4)
      PXPART(NTRACK)=PHOFIN(1)
      PYPART(NTRACK)=PHOFIN(2)
      PZPART(NTRACK)=PHOFIN(3)
      IF(IPRTRK.EQ.1) PRINT 397,IEVENT,NTRACK,ITYPE,PLAB,VERTEX
c
      IF(IEVENT.EQ.NEVENT) THEN           ! last event
        ERRBREM=ERRBREM/SECBREM*100
        PRINT 3212,SECBREM,ERRBREM,WMAX,(1.*NEVENT)/SECBREM
      END IF
c        
c----------------------------------------------------------------------
c
 
cXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
 
 999  CONTINUE 
 
c
 324  FORMAT(/,1x,60(1H*),//,
     &   ' Generator 320, process=',I2,': e+e- -> ',A15,/,
     &   ' Ebeam=',F8.4,' GeV',/,
     &   ' Acc of cr. sec.=',F8.4,' nb',/,
     &   ' Min. angle with axis=',F8.4,' Deg.',/,
     &   ' Hadron v.p. corr. inclusion =',I2,': 0-all/1-without res.'
     &    ,//,1x,60(1H*),/)
 397  FORMAT(I5,2I4,3F10.6,3F10.4)
 398  FORMAT(//,' Event',/)
 395  FORMAT(1x,i3,' P=',3f10.3,' typ=',i2)
 400  FORMAT(/,80(1h*),//,' Cross section =',1pe9.2,' +-',1pe9.2,' nb',/
     &       ,' L*t= ',1pe9.2,' 1/nb',/,
     &       
     &       ' Fmax =',1pe9.2,/, ' NGT =',I3,//,80(1h*))
 401  FORMAT(/,80(1h*),//,
     +       ' Fmax =',1pe9.2,/, ' NGT =',I3,//,80(1h*))
 3022 FORMAT(/,' Fractions of st- and dt-events: ',2F6.3,/)  
 3023 FORMAT(/,' L*t=',1pE12.3,' 1/nb',/)
 3121 FORMAT(/,1x,60(1H*),//,
     +       ' One particle simulation with test print',//,
     +        F5.1  ,' -  regime: 1- geantino / 2- any particle',/,
     +        F6.1,'	- particle type',/,
     +        1pE10.2,' - particle momentum (GeV/c)',/,
     +        1pE10.2,' - Xo (cm.)',/,
     +        1pE10.2,' - Yo (cm.)',/,
     +        1pE10.2,' - Zo (cm.)',/,
     +        1pE10.2,' - theta (deg.)',/,
     +        1pE10.2,' - phi (deg.)',/,
     +        0p6F5.1  ,' - GEANT types of unseen particles',
     +		 //,1x,60(1H*),/)
 3151 FORMAT(/,1x,60(1H*),//,
     &   ' Generator 315, process=',I2,': e+e- -> psi ->',A14,/,
     &   ' Final state radiation =',I2,/,
     &   ' M(psi-prime)=',F8.4,' GeV'
     &    ,//,1x,60(1H*),/) 
 3152 FORMAT(/,' Error in data for Generator 315, mode=',I2,' ?',/)
 3172 FORMAT(/,I10, ' - number of weights more than majoranta',/,
     +       1pe10.2,' - maximum weight',/)
 3173 FORMAT( /,' Iter. No',I3,': Int=',1PD10.3,' +-',
     1 1PD10.3,' nb',/,
     2 ' Accum. res.: Int=',1PD10.3,' +-',
     3 1PD10.3,' nb  chi**2 per int=',0pF10.3,/)
 3201 FORMAT(/,' Error in data for Generator 320, process=',I2)
 3212 FORMAT(/,' Sigma =',1pE10.3,' cm^2 (+-',0pF6.3,'%) : ',
     &         'cross-section for generated events',//,
     &         ' Maximum weight=',1pE10.2,//,
     &         ' L*t = ',1pE10.2,' 1/cm^2',/)
      RETURN 
      END
